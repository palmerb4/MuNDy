name: mundy_brownian_strongscaling
outpath: mundy_brownian_strongscaling_rome_cpu
comment: MuNDy on Rome CPUs

# benchmark configuration
parameterset:
  - name: param_set
    parameter:
        #- { name: nodes, type: int, _: "1,2,4,8" }
        #- { name: ranks_per_node, type: int, _: "120,60,30,15" }
        #- { name: npart, type: int, _: "10000,100000,1000000,10000000" }
      - { name: nodes, type: int, _: "1,2,4,8" }
      - { name: ranks_per_node, type: int, _: "120" }
      - { name: npart, type: int, _: "100, 1000, 10000, 100000, 1000000, 10000000" }

# Job configuration
  - name: execute_set
    parameter:
      - { name: submit_cmd, _: sbatch }
      - { name: job_file, _: mundy_brownian_strongscaling.run }
      - { name: walltime, _: "01:00:00" }
      - { name: cores_per_node, type: int, mode: python, _: "${sockets_per_node} * ${cores_per_socket}" }
      - { name: threads_per_rank, type: int, mode: python, _: "int(${cores_per_node} / ${ranks_per_node})" }
      - { name: num_ranks, type: int, mode: python, _: "${nodes} * ${ranks_per_node}" }
      - { name: ready_file, _: ready }
      - { name: err_file, _: mundy.err }
      - { name: out_file, _: mundy.out }
      - { name: exec, _: "mpirun --map-by socket:pe=$$OMP_NUM_THREADS /mnt/home/cedelmaier/Projects/Biophysics/MuNDyScratch/build/mundy/shape/tests/performance/MundyShape_PerformanceTestBrownianMotion.exe ${npart} 100.0 10000 0.00025 1.0" }
  - name: architecture_rome
    parameter:
      - { name: total_nodes, type: int, _: 640 }
      - { name: sockets_per_node, type: int, _: 2 }
      - { name: cores_per_socket, type: int, _: 64 }
      - { name: numa_nodes_per_socket, type: int, _: 4 }
      - { name: llc_mb, type: int, _: 256 }
      - { name: mem_gb, type: int, _: 1024 }
      - { name: partition, type: string, _: ccb }
      - { name: constraints, type: string, _: "rome&ib" }

# Load jobfile and copy input
fileset:
  name: files
  link:
    - "$$PWD/${job_file}.in"

# Substitute jobfile
substituteset:
  name: sub_job
  iofile: { in: "${job_file}.in", out: "$job_file" }
  sub:
    - { source: "#PARTITION#", dest: "$partition" }
    - { source: "#CONSTRAINTS#", dest: "$constraints" }
    - { source: "#NODES#", dest: "$nodes" }
    - { source: "#RANKS_PER_NODE#", dest: "$ranks_per_node" }
    - { source: "#THREADS_PER_RANK#", dest: "$threads_per_rank" }
    - { source: "#WALLTIME#", dest: "$walltime" }
    - { source: "#ERROR_FILEPATH#", dest: "$err_file" }
    - { source: "#OUT_FILEPATH#", dest: "$out_file" }
    - { source: "#EXEC#", dest: "$exec" }
    - { source: "#NPART#", dest: "$npart" }

# Regex pattern
patternset:
  name: pattern
  pattern:
      - { name: timesteps_per_second, type: float, default: 0, _: "Performance:\\s+$jube_pat_fp" }

# Operation
step:
  name: submit
  work_dir: "$$HOME/ceph/BENCHMARKS/JUBE/MUNDY/mundy_browniannonint_strong_rome/${jube_benchmark_padid}/wp_${jube_wp_padid}_n${nodes}_r${ranks_per_node}_np${npart}"
  use:
    - architecture_rome
    - param_set
    - files
    - execute_set
    - sub_job
  do:
    done_file: "DONE"
    _: "$submit_cmd $job_file"

# Analyze
analyser:
  name: analyse
  use: pattern
  analyse:
    step: submit
    file: $out_file

# Create result table
result:
  use: analyse
  table:
    name: result
    style: pretty
    sort: [npart,nodes,ranks_per_node,threads_per_rank]
    column:
      - npart
      - nodes
      - ranks_per_node
      - threads_per_rank
      - timesteps_per_second
