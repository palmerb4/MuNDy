"""Auto registration script for MyLibrary.

This script scans the source code for specific macro invocations and 
automatically generates an include file that includes all the headers for
files containing these macros.
"""

import os
import re

# The directory containing your source code
SRC_DIR = 'include'

# The output header file
OUTPUT_FILE = 'include/mundy/mundy.hpp'

# Regex to match uses of the MUNDY_REGISTER_METACLASS and MUNDY_REGISTER_MULTIBODYTYPE macros
MACRO_REGEX = re.compile(r'MUNDY_REGISTER_(?:METACLASS|MULTIBODYTYPE)')

# A set to hold all the files that contain registration macros
files_with_macros = set()

# Walk through the source directory
for root, _, files in os.walk(SRC_DIR):
    for file in files:
        # Only consider .h and .hpp files
        if file.endswith(('.h', '.hpp')):
            with open(os.path.join(root, file)) as f:
                # If this file uses the macros, add it to the set
                if any(MACRO_REGEX.search(line) for line in f):
                    files_with_macros.add(os.path.join(root, file)[len(SRC_DIR)+1:-4])  # remove src/ and .h/.hpp

# Write the output file
with open(OUTPUT_FILE, 'w') as output:
    output.write("/* This file is automatically generated by AutoGenLeafNodeIncludes.py.\n")
    output.write("   It includes all the header files which contain\n")
    output.write("   MUNDY_REGISTER_METACLASS and/or MUNDY_REGISTER_MULTIBODYTYPE macros.\n")
    output.write("   Please do not edit this file directly. */\n\n")

    for file in files_with_macros:
        output.write(f'#include "{file}.hpp"\n')